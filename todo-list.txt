Next: TRY MERGING MULTIPLE BRANCHES FOR PRACTICE
-make some levels, each different distance
    -implement rocks
        -change name of mEnemies
        -change rocks' speeds
    -store level data
        -enemies
            -type
            -start and end distances
        -rocks
            -type
            -start and end distances
        -distance needed to clear
        -background music
    -create level data instance for SGView
    -print level number in HUD
    -advance to next level after completion; max five levels
    -tell user when beat non-final level or beat final level or lost
    -make sure current level is kept if player dies
-as remaining distance decreases in each level:
    -the currently spawned enemies could change
        -would have to mark some enemies for no respawn
-can choose between three different spacecrafts of varying speed, size,
and shape
-make more kinds of enemies

Eventually:
-create some distance between initial spawn points, so that enemy entities
 are not approximately in a clump
-main activity
    -main menu background image
    -include some sort of directions (e.g. keep eye on distance remaining,
    tap left and right halves of screen)
-delete activity_main.xml
-improve playability
    -make sure spacecrafts' speeds and sizes are all great
-stop the player's horizontal movement after victory

Considerable:
-ways for the user to change his spacecraft's vertical speed
-put finish line sprite at goal distance
-special effects when the user is almost at the goal; e.g.:
    -screen could have flashes of red
    -alarm sound effects could play
-implement explosion (via sprite sheet) when user's spacecraft explodes
-combine all images into one sprite sheet
-enemies that shoot
-sound when enemy respawns (would this play too frequently?)
-hunter's horizontal speed has some randomness and/or gradual increase
-don't update the shown distance remaining as frequently (since the tens
and ones digits could be distracting)
-consider scaling everything, so it all looks the same on every device
    --look into eBook for discussion about this topic
    --since a dust speck is a pixel, could make number of specks
    depend on number of pixels, and then just scale the bitmaps
        --PROBLEM: all crafts move more slowly on bigger devices
            --could compensate by editing speed
            --could do what was done in eBook's Chapter 5
-rocks (as obstacles)
-change sound effects
