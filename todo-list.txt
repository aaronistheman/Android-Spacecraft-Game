DON'T FORGET ABOUT UNIT TESTS

Release 1.0:
-make the hunter enemy's outer ridge white instead of black
-look into reading data from text files
-figure out a way to throw AssertionError if incomplete level data is stored
(before that level data is needed)
    -use unit test!
    -check both debugging and non-debugging
-call mBackgroundRelease.release() in onStop()
    -saves battery

Release 1.1:
-can choose between three different spacecrafts of varying speed, size,
and shape

Release 1.2:
-main activity
    -main menu background image
    -include some sort of directions (e.g. keep eye on distance remaining,
    tap left and right halves of screen)
-make HUD beautiful-er; see Google Images for inspiration

Eventually:
-player's spacecraft's speed could increase as levels progress
-make enemies disappear before a level is finished (by editing level data)
-make more kinds of enemies (i.e. not variations of hunters or dummies)
-make game have total of 40 levels
-upload app on Google Play

Considerable:
-consider scaling everything, so it all looks the same on every device
    --may not be needed
    --look into eBook (i.e. "Android Game Development by Example")
    for discussion about this topic
    --since a dust speck is a pixel, could make number of specks
    depend on number of pixels, and then just scale the bitmaps
        --PROBLEM: all crafts move more slowly on bigger devices
            --could compensate by editing speed
            --could do what was done in eBook's Chapter 5
-put finish line sprite at goal distance
-special effects when the user is almost at the goal; e.g.:
    -screen could have flashes of red
    -alarm sound effects could play
-implement explosion (via sprite sheet) when user's spacecraft explodes
-combine all images into one sprite sheet
-enemies that shoot
-could restart level data by iterating through and adjusting each's
hasSpawned member
